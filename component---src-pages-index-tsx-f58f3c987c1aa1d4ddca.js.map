{"version":3,"file":"component---src-pages-index-tsx-f58f3c987c1aa1d4ddca.js","mappings":"mKA2DA,IA9C6C,SAAC,GAAwB,EAAtBA,MAAuB,IAAhBC,EAAe,EAAfA,SAC/CC,GAAUC,EAAAA,EAAAA,KACVC,EAAgBF,EAAQG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,WAC1C,OACE,gCACGN,EACAG,GACC,0BACEI,MAAO,CACLC,QAAQ,wBAGV,uBAAKC,UAAU,aACb,uBAAKF,MAAO,CAAEG,SAAU,aACtB,uBACEH,MAAO,CACLG,SAAU,WACVC,KAAM,mBACNC,IAAK,MACLC,UAAW,qBALf,KASE,wBAAMJ,UAAU,kBACbR,EAAQa,KAAI,SAAAT,GAAC,OAAIA,EAAEU,KAAKC,UAAQC,KAAK,SAG1C,0BACEC,aAAcf,EAAcgB,GAC5BC,SAAU,SAAAC,GAAC,OAAIC,EAAAA,EAAAA,UAAS,MAAQD,EAAEE,OAAOC,QACzCjB,MAAO,CAAEkB,YAAa,qBAErBxB,EAAQa,KAAI,SAAAY,GAAM,OACjB,0BAAQC,IAAKD,EAAOP,GAAIK,MAAOE,EAAOP,IACnCO,EAAOP,GADV,MACiBO,EAAOX,KAAKa,sB,6ECpChC,SAAS1B,IACtB,IAAQ2B,GAA6BC,EAAAA,EAAAA,gBAAe,cAA5CD,QAkBAE,GAAaC,EAAAA,EAAAA,eAAbD,SAER,OAAOF,EAAQI,MAAMnB,KAAI,SAAAoB,GAAI,MAAK,CAChC5B,QAAS,IAAI6B,OAAJ,IAAeD,EAAKE,MAAQC,KAAKN,GAC1CZ,GAAIe,EAAKE,KACTrB,KAAMmB,EAAKI,oB,wECCf,UA9BkB,WAChB,IAAMrC,GAAUC,EAAAA,EAAAA,KAkBhB,OAhBAqC,EAAAA,WAAgB,WACd,IAAMC,EAAkBC,OAAOC,UAAUC,SACrCC,EAAiB3C,EAAQG,MAC3B,SAAAC,GAAC,OAAIA,EAAEc,GAAG0B,QAAQ,IAAK,OAASL,KAE7BI,IACHA,EAAiB3C,EAAQG,MACvB,SAAAC,GAAC,OAAIA,EAAEc,KAAOqB,EAAgBK,QAAQ,YAAa,QAGnDD,IACFE,QAAQC,IAAI,CAAE9C,QAAAA,EAASuC,gBAAAA,EAAiBI,eAAAA,KACxCtB,EAAAA,EAAAA,UAAS,IAAIsB,EAAezB,GAApB,QAET,IAGD,gBAAC,IAAD,KACGlB,EAAQa,KAAI,gBAAGK,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAP,OACX,qBAAGY,IAAKR,GACN,gBAAC,EAAA6B,KAAD,CAAMC,GAAE,IAAM9B,EAAN,KAAcJ,EAAKC","sources":["webpack://tenk-template-gatsby/./src/components/layout.tsx","webpack://tenk-template-gatsby/./src/hooks/useLocales.ts","webpack://tenk-template-gatsby/./src/pages/index.tsx"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { navigate } from \"gatsby\"\n\nimport \"./layout.scss\"\nimport useLocales from \"../hooks/useLocales\"\n\nconst Layout: React.FC<{ title?: string }> = ({ title, children }) => {\n  const locales = useLocales()\n  const currentLocale = locales.find(l => l.current)\n  return (\n    <>\n      {children}\n      {currentLocale && (\n        <footer\n          style={{\n            padding: `var(--spacing-xl) 0`,\n          }}\n        >\n          <div className=\"container\">\n            <div style={{ position: \"relative\" }}>\n              <div\n                style={{\n                  position: \"absolute\",\n                  left: \"var(--spacing-s)\",\n                  top: \"50%\",\n                  transform: \"translateY(-50%)\",\n                }}\n              >\n                üåê\n                <span className=\"visuallyHidden\">\n                  {locales.map(l => l.i18n.viewIn).join(\" | \")}\n                </span>\n              </div>\n              <select\n                defaultValue={currentLocale.id}\n                onChange={e => navigate(\"../\" + e.target.value)}\n                style={{ paddingLeft: \"var(--spacing-l)\" }}\n              >\n                {locales.map(locale => (\n                  <option key={locale.id} value={locale.id}>\n                    {locale.id} - {locale.i18n.langPicker}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  )\n}\n\nexport default Layout\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport { useLocation } from \"@reach/router\"\nimport type { AllLocalesQuery } from \"../../graphql-types\"\n\n/**\n * Gatsby really wants to push everything, even simple stuff like JSON files in\n * a project folder, through a complicated GraphQL pipeline. This hook hides the\n * details of looking up the locale files in the `i18n` folder and makes them\n * easily accessible to any component that needs them. It also adds a `current`\n * field for the current locale based on the current route.\n */\nexport default function useLocales() {\n  const { allFile }: AllLocalesQuery = useStaticQuery(\n    graphql`\n      query AllLocales {\n        allFile(filter: { sourceInstanceName: { eq: \"i18n\" } }) {\n          nodes {\n            name\n            childI18NJson {\n              viewIn\n              langPicker\n              title\n              description\n              connectWallet\n            }\n          }\n        }\n      }\n    `\n  )\n  const { pathname } = useLocation()\n\n  return allFile.nodes.map(node => ({\n    current: new RegExp(`/${node.name}`).test(pathname),\n    id: node.name,\n    i18n: node.childI18NJson!,\n  }))\n}\n","import * as React from \"react\"\nimport { Link, navigate } from \"gatsby\"\n\nimport useLocales from \"../hooks/useLocales\"\nimport Layout from \"../components/layout\"\n\nconst IndexPage = () => {\n  const locales = useLocales()\n\n  React.useEffect(() => {\n    const preferredLocale = window.navigator.language\n    let matchingLocale = locales.find(\n      l => l.id.replace(\"_\", \"-\") === preferredLocale\n    )\n    if (!matchingLocale)\n      matchingLocale = locales.find(\n        l => l.id === preferredLocale.replace(/-[A-Z]{2}/, \"\")\n      )\n\n    if (matchingLocale) {\n      console.log({ locales, preferredLocale, matchingLocale })\n      navigate(`/${matchingLocale.id}/`)\n    }\n  }, [])\n\n  return (\n    <Layout>\n      {locales.map(({ id, i18n }) => (\n        <p key={id}>\n          <Link to={`/${id}/`}>{i18n.viewIn}</Link>\n        </p>\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["title","children","locales","useLocales","currentLocale","find","l","current","style","padding","className","position","left","top","transform","map","i18n","viewIn","join","defaultValue","id","onChange","e","navigate","target","value","paddingLeft","locale","key","langPicker","allFile","useStaticQuery","pathname","useLocation","nodes","node","RegExp","name","test","childI18NJson","React","preferredLocale","window","navigator","language","matchingLocale","replace","console","log","Link","to"],"sourceRoot":""}